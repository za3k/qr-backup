QR-BACKUP(1)                                                       QR-BACKUP(1)

NAME
       qr-backup - back up file(s) to a series of QR codes on paper

SYNOPSIS
       qr-backup [OPTIONS] FILE [FILE...]
       qr-backup --restore [OPTIONS]
       qr-backup --restore [OPTIONS] IMAGE [IMAGE...]

DESCRIPTION
       qr-backup converts a binary file to a backup suitable for printing.  The
       backup is a .pdf file containing several barcodes.

       qr-backup  --restore  restores  a  paper backup and outputs the original
       file.  Restore is done using a webcam or scanner.

       Restore is possible without qr-backup.  Restore directions are  included
       in the paper backup.

OPTIONS
       --help, -h
              Print a help message.

       --verbose, -v
              Print more detailed information during run.

       --version, -V
              Print the verison and immediately exit.

BACKUP OPTIONS
       --compress, --no-compress
              This  gives a more compact backup, but partial recovery is impos-
              sible.  Default: compressed

       --dpi DPI
              Sets the print resolution of your printer.  Default: 300

       --encrypt generate, --encrypt PASSPHRASE
              Password-protect the backup.  If the passphrase is `generate',  a
              passphrase  is  automatically  generated for you, which you would
              need to store securely or you will be unable to unlock the  data.
              Default: disabled

       --encrypt-print-passphrase, --no-encrypt-print-passphrase
              Print  the  passphrase  on  a sheet by itself.  Default: print if
              generated by qr-code, don't print if passed in

       --erasure-coding, --no-erasure-coding
              This allows restoring if some QR codes are  lost.   Restore  with
              lost codes is only possible using qr-backup.  Default: enabled

       --error-correction CORRECTION
              Sets  the error correction level.  Options are L (7%), M (15%), Q
              (25%), and H (30%).  Default: M (15%)

       --filename FILENAME
              Set the restored filename.  Max 32 chars.  Default: same as FILE

       --instructions page|cover|both|none
              Sets how frequently the instructions are printed.  If `cover'  or
              `both'  is selected, more verbose instructions will be printed on
              the cover page.  Default: page

       --note TEXT
              Add a special note to the printout  instructions.   Can  be  any-
              thing.  Default: no note

       --num-copies NUMBER
              Print multiple copies of each QR code for redundancy.  Default: 1

       --output FILENAME, -o FILENAME
              Set  the  output  pdf  path (redirecting stdout also works).  De-
              fault: FILE.qr.pdf

       --page WIDTH_POINTS HEIGHT_POINTS
              Sets the usable size of the paper on your printer.   This  should
              NOT  be 8.5 x 11 -- make sure to include margins.  Default: 500px
              x 600px

       --qr-version VERSION
              Uses QR codes, version VERSION.  Versions range from  1-40.   The
              bigger  the  version,  the  harder  to scan but the more data per
              code.  Default: 10

       --scale SCALE
              Scale QR codes so that each small square in the QR code is  SCALE
              x SCALE pixels.  Default: 5px

       --shuffle, --no-shuffle
              Spread  QR  codes across pages.  This can help prevent data loss.
              Default: yes if erasure coding is enabled (default), no otherwise

       --skip-checks, --no-skip-checks
              Skip erasure code checks, self-restore checks.  Default: skipped

RESTORE OPTIONS
       --code-count-erasure COUNT
              Specify the number of erasure QR codes.  Default: automatic

       --code-count-normal COUNT
              Specify the number of normal QR codes.  Default: automatic

       --compress, --no-compress
              Force decompression (on/off).  Default: automatic

       --display, --no-display
              For webcam scanning, (display/don't display)  a  webcam  preview.
              Default: display

       --encrypt PASSPHRASE, --no-encrypt
              Force  decryption (on/off) and give the passphrase if decrypting.
              Default: automatic

       --image-restore
              Force image-based (scanner) restore.  Default: automatic

       --output FILENAME, -o FILENAME
              Set the restore file path.  Default: stdout

       --sha256 SHA256
              Include a sha256sum to check the file.  Giving the  initial  part
              of the sha256sum does a partial check.  Default: no check, prints
              checksum to stderr

       --webcam-restore
              Force webcam-based restore.  Default: automatic

EXIT VALUES
       0      Success.   This  includes  certain self-test failures which some-
              times fail by chance.

       1      Invalid command line option

       2      File missing or access failed

       3      Self-test restore failed

       4      Restore failed

       5      convert subcommand failed

       6      zbarimg or zbarcam subcommand failed

       7      gpg subcommand failed

BUGS
       Please report any bugs at https://github.com/za3k/qr-backup/issues .

       Sometimes scanned images, including the original  PDF,  cannot  be  read
       successfully and the restore self-check fails.  This appears to be a bug
       in zbar.

       On  Debian,  Ubuntu and certain other systems, the default system image-
       magick policy prevents reading or writing PDFs.  Since qr-backup depends
       on both, it will fail.  qr-backup does its best to report  this  problem
       clearly.

       It  is possible to print barcodes so large or small your webcam or scan-
       ner cannot read them.  Make sure to test your restore process when using
       non-default settings.

COPYRIGHT
       qr-backup was written by Zachary Vance, and is released into the  public
       domain  and  under CC0 <https://creativecommons.org/share-your-work/pub-
       lic-domain/cc0/>.  The generated PDF includes the DejaVu Sans Mono font,
       which  has  a   separate   license   <https://dejavu-fonts.github.io/Li-
       cense.html>.

       The  qr-backup  source code is available at <https://github.com/za3k/qr-
       backup>.

AUTHORS
       Zachary Vance.

qr-backup 1.1.4                   August 2025                      QR-BACKUP(1)
